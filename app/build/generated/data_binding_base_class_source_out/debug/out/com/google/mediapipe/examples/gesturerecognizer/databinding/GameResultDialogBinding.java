// Generated by view binder compiler. Do not edit!
package com.google.mediapipe.examples.gesturerecognizer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.mediapipe.examples.gesturerecognizer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class GameResultDialogBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button backToMenuButton;

  @NonNull
  public final LinearLayout dialogContainer;

  @NonNull
  public final TextView dialogScore;

  @NonNull
  public final TextView dialogTitle;

  @NonNull
  public final Button playAgainButton;

  private GameResultDialogBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button backToMenuButton, @NonNull LinearLayout dialogContainer,
      @NonNull TextView dialogScore, @NonNull TextView dialogTitle,
      @NonNull Button playAgainButton) {
    this.rootView = rootView;
    this.backToMenuButton = backToMenuButton;
    this.dialogContainer = dialogContainer;
    this.dialogScore = dialogScore;
    this.dialogTitle = dialogTitle;
    this.playAgainButton = playAgainButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static GameResultDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static GameResultDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.game_result_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static GameResultDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backToMenuButton;
      Button backToMenuButton = ViewBindings.findChildViewById(rootView, id);
      if (backToMenuButton == null) {
        break missingId;
      }

      id = R.id.dialogContainer;
      LinearLayout dialogContainer = ViewBindings.findChildViewById(rootView, id);
      if (dialogContainer == null) {
        break missingId;
      }

      id = R.id.dialogScore;
      TextView dialogScore = ViewBindings.findChildViewById(rootView, id);
      if (dialogScore == null) {
        break missingId;
      }

      id = R.id.dialogTitle;
      TextView dialogTitle = ViewBindings.findChildViewById(rootView, id);
      if (dialogTitle == null) {
        break missingId;
      }

      id = R.id.playAgainButton;
      Button playAgainButton = ViewBindings.findChildViewById(rootView, id);
      if (playAgainButton == null) {
        break missingId;
      }

      return new GameResultDialogBinding((ConstraintLayout) rootView, backToMenuButton,
          dialogContainer, dialogScore, dialogTitle, playAgainButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
